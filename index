<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>物品借用系統</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Microsoft JhengHei', 'PingFang TC', sans-serif;
            background-color: #f0f9ff;
        }
        .dropdown-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease-out;
        }
        .dropdown-content.show {
            max-height: 300px;
            overflow-y: auto;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 50;
        }
        .modal-content {
            animation: modalFadeIn 0.3s;
        }
        @keyframes modalFadeIn {
            from {transform: translateY(-20px); opacity: 0;}
            to {transform: translateY(0); opacity: 1;}
        }
        .tab-active {
            border-bottom: 3px solid #2563eb;
            color: #2563eb;
        }
    </style>
</head>
<body>
    <div class="min-h-screen flex flex-col items-center p-4">
        <div class="w-full max-w-4xl bg-white rounded-xl shadow-lg p-6 mt-8">
            <div class="flex justify-between items-center mb-6">
                <h1 class="text-3xl font-bold text-blue-600">物品借用系統</h1>
                <button id="admin-btn" class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 focus:outline-none flex items-center">
                    <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                    管理者
                </button>
            </div>
            
            <!-- 頁籤 -->
            <div class="flex border-b border-gray-200 mb-6">
                <button id="tab-borrow" class="px-6 py-3 font-medium tab-active">借用申請</button>
                <button id="tab-records" class="px-6 py-3 font-medium text-gray-500">借用紀錄</button>
                <button id="tab-history" class="px-6 py-3 font-medium text-gray-500">歷史紀錄</button>
                <button id="tab-items" class="px-6 py-3 font-medium text-gray-500 hidden">物品管理</button>
            </div>
            
            <!-- 借用申請表單 -->
            <div id="borrow-form" class="mb-8">
                <h2 class="text-xl font-semibold mb-3 text-gray-700">選擇借用物品</h2>
                
                <!-- 下拉式選單 -->
                <div class="relative mb-4">
                    <div id="dropdown-button" class="flex justify-between items-center w-full p-3 border border-gray-300 rounded-lg bg-white cursor-pointer hover:bg-gray-50">
                        <span id="selected-item" class="text-gray-700">請選擇物品</span>
                        <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </div>
                    <div id="dropdown-content" class="dropdown-content absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg">
                        <ul id="item-list" class="py-2">
                            <!-- 物品列表會在這裡動態添加 -->
                        </ul>
                        <div id="add-item-container" class="border-t border-gray-200 p-3 hidden">
                            <div class="flex">
                                <input type="text" id="new-item-input" class="flex-grow p-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="新增物品...">
                                <button id="add-item-btn" class="bg-blue-500 text-white px-4 py-2 rounded-r-lg hover:bg-blue-600 focus:outline-none">
                                    新增
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 借用表單 -->
                <div class="space-y-4">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="borrower-name" class="block text-sm font-medium text-gray-700 mb-1">借用人姓名 <span class="text-red-500">*</span></label>
                            <input type="text" id="borrower-name" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        
                        <div>
                            <label for="department-code" class="block text-sm font-medium text-gray-700 mb-1">部門代號 <span class="text-red-500">*</span></label>
                            <input type="text" id="department-code" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>
                    
                    <div>
                        <label for="extension" class="block text-sm font-medium text-gray-700 mb-1">單位分機 <span class="text-red-500">*</span></label>
                        <input type="text" id="extension" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="borrow-date" class="block text-sm font-medium text-gray-700 mb-1">借用日期 <span class="text-red-500">*</span></label>
                            <input type="date" id="borrow-date" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        
                        <div>
                            <label for="return-date" class="block text-sm font-medium text-gray-700 mb-1">預計歸還日期 <span class="text-red-500">*</span></label>
                            <input type="date" id="return-date" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>
                    
                    <div>
                        <label for="purpose" class="block text-sm font-medium text-gray-700 mb-1">備註</label>
                        <textarea id="purpose" rows="3" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
                    </div>
                    
                    <button id="submit-btn" class="w-full bg-blue-600 text-white py-3 rounded-lg font-medium hover:bg-blue-700 transition duration-200 mt-2">
                        提交借用申請
                    </button>
                </div>
            </div>
            
            <!-- 借用紀錄 -->
            <div id="current-records" class="hidden">
                <h2 class="text-xl font-semibold mb-3 text-gray-700">目前借用紀錄</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead>
                            <tr class="bg-gray-100">
                                <th class="py-3 px-2 text-left border-b">物品名稱</th>
                                <th class="py-3 px-2 text-left border-b">借用人</th>
                                <th class="py-3 px-2 text-left border-b">部門</th>
                                <th class="py-3 px-2 text-left border-b">分機</th>
                                <th class="py-3 px-2 text-left border-b">借用日期</th>
                                <th class="py-3 px-2 text-left border-b">預計歸還</th>
                                <th class="py-3 px-2 text-left border-b">狀態</th>
                                <th class="py-3 px-2 text-left border-b">操作</th>
                            </tr>
                        </thead>
                        <tbody id="borrow-records">
                            <!-- 借用紀錄會在這裡動態添加 -->
                        </tbody>
                    </table>
                </div>
                <p id="no-records" class="text-center text-gray-500 py-4">目前沒有借用紀錄</p>
            </div>
            
            <!-- 歷史紀錄 -->
            <div id="history-records" class="hidden">
                <div class="flex justify-between items-center mb-3">
                    <h2 class="text-xl font-semibold text-gray-700">歷史借用紀錄</h2>
                    <button id="export-btn" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 focus:outline-none flex items-center">
                        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                        </svg>
                        匯出Excel
                    </button>
                </div>
                
                <div class="mb-4 flex flex-wrap gap-2">
                    <input type="text" id="search-input" placeholder="搜尋..." class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <select id="filter-year" class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">所有年份</option>
                    </select>
                    <select id="filter-department" class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">所有部門</option>
                    </select>
                    <button id="filter-btn" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 focus:outline-none">
                        篩選
                    </button>
                </div>
                
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead>
                            <tr class="bg-gray-100">
                                <th class="py-3 px-2 text-left border-b">物品名稱</th>
                                <th class="py-3 px-2 text-left border-b">借用人</th>
                                <th class="py-3 px-2 text-left border-b">部門</th>
                                <th class="py-3 px-2 text-left border-b">分機</th>
                                <th class="py-3 px-2 text-left border-b">借用日期</th>
                                <th class="py-3 px-2 text-left border-b">歸還日期</th>
                                <th class="py-3 px-2 text-left border-b">備註</th>
                                <th id="history-action-header" class="py-3 px-2 text-left border-b hidden">操作</th>
                            </tr>
                        </thead>
                        <tbody id="history-records-body">
                            <!-- 歷史紀錄會在這裡動態添加 -->
                        </tbody>
                    </table>
                </div>
                <p id="no-history" class="text-center text-gray-500 py-4">目前沒有歷史紀錄</p>
            </div>
            
            <!-- 物品管理 (管理者模式) -->
            <div id="items-management" class="hidden">
                <h2 class="text-xl font-semibold mb-3 text-gray-700">物品管理</h2>
                
                <div class="mb-4 flex">
                    <input type="text" id="manage-item-input" class="flex-grow p-3 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="輸入物品名稱...">
                    <button id="manage-add-item-btn" class="bg-blue-500 text-white px-4 py-2 rounded-r-lg hover:bg-blue-600 focus:outline-none">
                        新增物品
                    </button>
                </div>
                
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead>
                            <tr class="bg-gray-100">
                                <th class="py-3 px-4 text-left border-b">物品名稱</th>
                                <th class="py-3 px-4 text-left border-b">操作</th>
                            </tr>
                        </thead>
                        <tbody id="manage-items-list">
                            <!-- 物品列表會在這裡動態添加 -->
                        </tbody>
                    </table>
                </div>
                <p id="no-items" class="text-center text-gray-500 py-4">目前沒有物品</p>
                
                <div class="mt-8 border-t pt-6">
                    <h3 class="text-lg font-semibold mb-3 text-gray-700">管理者設定</h3>
                    <div class="space-y-4">
                        <div>
                            <label for="current-password" class="block text-sm font-medium text-gray-700 mb-1">目前密碼</label>
                            <input type="password" id="current-password" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="new-password" class="block text-sm font-medium text-gray-700 mb-1">新密碼</label>
                            <input type="password" id="new-password" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="confirm-password" class="block text-sm font-medium text-gray-700 mb-1">確認新密碼</label>
                            <input type="password" id="confirm-password" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <button id="change-password-btn" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 focus:outline-none">
                            變更密碼
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 歸還確認對話框 -->
    <div id="return-modal" class="modal">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content bg-white rounded-xl shadow-xl p-6 max-w-md w-full">
                <h3 class="text-xl font-bold text-gray-800 mb-4">確認歸還</h3>
                <p class="text-gray-600 mb-6">請問是否確認歸還此物品？</p>
                <div class="flex justify-end space-x-3">
                    <button id="cancel-return" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none">
                        取消
                    </button>
                    <button id="confirm-return" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none">
                        是，確認歸還
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 刪除確認對話框 -->
    <div id="delete-modal" class="modal">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content bg-white rounded-xl shadow-xl p-6 max-w-md w-full">
                <h3 class="text-xl font-bold text-gray-800 mb-4">確認刪除</h3>
                <p id="delete-message" class="text-gray-600 mb-6">請問是否確認刪除此項目？</p>
                <div class="flex justify-end space-x-3">
                    <button id="cancel-delete" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none">
                        取消
                    </button>
                    <button id="confirm-delete" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:outline-none">
                        是，確認刪除
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 管理者登入對話框 -->
    <div id="admin-login-modal" class="modal">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content bg-white rounded-xl shadow-xl p-6 max-w-md w-full">
                <h3 class="text-xl font-bold text-gray-800 mb-4">管理者登入</h3>
                <div class="mb-4">
                    <label for="admin-password" class="block text-sm font-medium text-gray-700 mb-1">請輸入管理者密碼</label>
                    <input type="password" id="admin-password" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div id="admin-error" class="text-red-500 mb-4 hidden">密碼錯誤，請重新輸入</div>
                <div class="flex justify-end space-x-3">
                    <button id="cancel-admin-login" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none">
                        取消
                    </button>
                    <button id="confirm-admin-login" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none">
                        登入
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 新增歷史紀錄對話框 -->
    <div id="add-history-modal" class="modal">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="modal-content bg-white rounded-xl shadow-xl p-6 max-w-lg w-full">
                <h3 class="text-xl font-bold text-gray-800 mb-4">新增歷史紀錄</h3>
                <div class="space-y-4">
                    <div>
                        <label for="history-item" class="block text-sm font-medium text-gray-700 mb-1">物品名稱 <span class="text-red-500">*</span></label>
                        <select id="history-item" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <!-- 物品選項會在這裡動態添加 -->
                        </select>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="history-name" class="block text-sm font-medium text-gray-700 mb-1">借用人姓名 <span class="text-red-500">*</span></label>
                            <input type="text" id="history-name" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="history-department" class="block text-sm font-medium text-gray-700 mb-1">部門代號 <span class="text-red-500">*</span></label>
                            <input type="text" id="history-department" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>
                    <div>
                        <label for="history-extension" class="block text-sm font-medium text-gray-700 mb-1">單位分機 <span class="text-red-500">*</span></label>
                        <input type="text" id="history-extension" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="history-borrow-date" class="block text-sm font-medium text-gray-700 mb-1">借用日期 <span class="text-red-500">*</span></label>
                            <input type="date" id="history-borrow-date" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="history-return-date" class="block text-sm font-medium text-gray-700 mb-1">歸還日期 <span class="text-red-500">*</span></label>
                            <input type="date" id="history-return-date" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                    </div>
                    <div>
                        <label for="history-purpose" class="block text-sm font-medium text-gray-700 mb-1">備註</label>
                        <textarea id="history-purpose" rows="2" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
                    </div>
                </div>
                <div class="flex justify-end space-x-3 mt-6">
                    <button id="cancel-add-history" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none">
                        取消
                    </button>
                    <button id="confirm-add-history" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none">
                        新增
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM元素
            const dropdownButton = document.getElementById('dropdown-button');
            const dropdownContent = document.getElementById('dropdown-content');
            const selectedItem = document.getElementById('selected-item');
            const itemList = document.getElementById('item-list');
            const newItemInput = document.getElementById('new-item-input');
            const addItemBtn = document.getElementById('add-item-btn');
            const addItemContainer = document.getElementById('add-item-container');
            const submitBtn = document.getElementById('submit-btn');
            const borrowerName = document.getElementById('borrower-name');
            const departmentCode = document.getElementById('department-code');
            const extension = document.getElementById('extension');
            const borrowDate = document.getElementById('borrow-date');
            const returnDate = document.getElementById('return-date');
            const purpose = document.getElementById('purpose');
            const borrowRecords = document.getElementById('borrow-records');
            const noRecords = document.getElementById('no-records');
            const returnModal = document.getElementById('return-modal');
            const cancelReturn = document.getElementById('cancel-return');
            const confirmReturn = document.getElementById('confirm-return');
            const tabBorrow = document.getElementById('tab-borrow');
            const tabRecords = document.getElementById('tab-records');
            const tabHistory = document.getElementById('tab-history');
            const tabItems = document.getElementById('tab-items');
            const borrowForm = document.getElementById('borrow-form');
            const currentRecords = document.getElementById('current-records');
            const historyRecords = document.getElementById('history-records');
            const itemsManagement = document.getElementById('items-management');
            const exportBtn = document.getElementById('export-btn');
            const historyRecordsBody = document.getElementById('history-records-body');
            const noHistory = document.getElementById('no-history');
            const filterYear = document.getElementById('filter-year');
            const filterDepartment = document.getElementById('filter-department');
            const filterBtn = document.getElementById('filter-btn');
            const searchInput = document.getElementById('search-input');
            const adminBtn = document.getElementById('admin-btn');
            const adminLoginModal = document.getElementById('admin-login-modal');
            const adminPassword = document.getElementById('admin-password');
            const confirmAdminLogin = document.getElementById('confirm-admin-login');
            const cancelAdminLogin = document.getElementById('cancel-admin-login');
            const adminError = document.getElementById('admin-error');
            const currentPassword = document.getElementById('current-password');
            const newPassword = document.getElementById('new-password');
            const confirmPassword = document.getElementById('confirm-password');
            const changePasswordBtn = document.getElementById('change-password-btn');
            const manageItemInput = document.getElementById('manage-item-input');
            const manageAddItemBtn = document.getElementById('manage-add-item-btn');
            const manageItemsList = document.getElementById('manage-items-list');
            const noItems = document.getElementById('no-items');
            const deleteModal = document.getElementById('delete-modal');
            const deleteMessage = document.getElementById('delete-message');
            const confirmDelete = document.getElementById('confirm-delete');
            const cancelDelete = document.getElementById('cancel-delete');
            const historyActionHeader = document.getElementById('history-action-header');
            const addHistoryModal = document.getElementById('add-history-modal');
            const historyItem = document.getElementById('history-item');
            const historyName = document.getElementById('history-name');
            const historyDepartment = document.getElementById('history-department');
            const historyExtension = document.getElementById('history-extension');
            const historyBorrowDate = document.getElementById('history-borrow-date');
            const historyReturnDate = document.getElementById('history-return-date');
            const historyPurpose = document.getElementById('history-purpose');
            const confirmAddHistory = document.getElementById('confirm-add-history');
            const cancelAddHistory = document.getElementById('cancel-add-history');
            
            // 設定今天的日期為預設值
            const today = new Date().toISOString().split('T')[0];
            borrowDate.value = today;
            historyBorrowDate.value = today;
            historyReturnDate.value = today;
            
            // 初始化資料
            let borrowingRecords = [];
            let historyData = [];
            let itemsData = [];
            let currentRecordId = 0;
            let currentReturnId = null;
            let currentDeleteType = null;
            let currentDeleteId = null;
            let isAdminMode = false;
            let adminPasswordValue = '8730'; // 預設管理者密碼
            
            // 初始化年份選項
            const currentYear = new Date().getFullYear();
            for (let i = 0; i < 5; i++) {
                const year = currentYear - i;
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year + '年';
                filterYear.appendChild(option);
            }
            
            // 頁籤切換
            tabBorrow.addEventListener('click', function() {
                borrowForm.classList.remove('hidden');
                currentRecords.classList.add('hidden');
                historyRecords.classList.add('hidden');
                itemsManagement.classList.add('hidden');
                
                tabBorrow.classList.add('tab-active');
                tabBorrow.classList.remove('text-gray-500');
                tabRecords.classList.remove('tab-active');
                tabRecords.classList.add('text-gray-500');
                tabHistory.classList.remove('tab-active');
                tabHistory.classList.add('text-gray-500');
                tabItems.classList.remove('tab-active');
                tabItems.classList.add('text-gray-500');
            });
            
            tabRecords.addEventListener('click', function() {
                borrowForm.classList.add('hidden');
                currentRecords.classList.remove('hidden');
                historyRecords.classList.add('hidden');
                itemsManagement.classList.add('hidden');
                
                tabBorrow.classList.remove('tab-active');
                tabBorrow.classList.add('text-gray-500');
                tabRecords.classList.add('tab-active');
                tabRecords.classList.remove('text-gray-500');
                tabHistory.classList.remove('tab-active');
                tabHistory.classList.add('text-gray-500');
                tabItems.classList.remove('tab-active');
                tabItems.classList.add('text-gray-500');
            });
            
            tabHistory.addEventListener('click', function() {
                borrowForm.classList.add('hidden');
                currentRecords.classList.add('hidden');
                historyRecords.classList.remove('hidden');
                itemsManagement.classList.add('hidden');
                
                tabBorrow.classList.remove('tab-active');
                tabBorrow.classList.add('text-gray-500');
                tabRecords.classList.remove('tab-active');
                tabRecords.classList.add('text-gray-500');
                tabHistory.classList.add('tab-active');
                tabHistory.classList.remove('text-gray-500');
                tabItems.classList.remove('tab-active');
                tabItems.classList.add('text-gray-500');
                
                updateHistoryDisplay();
            });
            
            tabItems.addEventListener('click', function() {
                borrowForm.classList.add('hidden');
                currentRecords.classList.add('hidden');
                historyRecords.classList.add('hidden');
                itemsManagement.classList.remove('hidden');
                
                tabBorrow.classList.remove('tab-active');
                tabBorrow.classList.add('text-gray-500');
                tabRecords.classList.remove('tab-active');
                tabRecords.classList.add('text-gray-500');
                tabHistory.classList.remove('tab-active');
                tabHistory.classList.add('text-gray-500');
                tabItems.classList.add('tab-active');
                tabItems.classList.remove('text-gray-500');
                
                updateItemsManagement();
            });
            
            // 下拉選單開關
            dropdownButton.addEventListener('click', function() {
                dropdownContent.classList.toggle('show');
            });
            
            // 點擊外部關閉下拉選單
            document.addEventListener('click', function(event) {
                if (!dropdownButton.contains(event.target) && !dropdownContent.contains(event.target)) {
                    dropdownContent.classList.remove('show');
                }
            });
            
            // 選擇物品
            itemList.addEventListener('click', function(event) {
                if (event.target.tagName === 'LI') {
                    selectedItem.textContent = event.target.textContent;
                    dropdownContent.classList.remove('show');
                }
            });
            
            // 新增物品
            addItemBtn.addEventListener('click', function() {
                const newItemName = newItemInput.value.trim();
                if (newItemName) {
                    addItem(newItemName);
                    newItemInput.value = '';
                }
            });
            
            // 按Enter鍵新增物品
            newItemInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    addItemBtn.click();
                }
            });
            
            // 提交借用申請
            submitBtn.addEventListener('click', function() {
                const item = selectedItem.textContent;
                const name = borrowerName.value.trim();
                const department = departmentCode.value.trim();
                const ext = extension.value.trim();
                const bDate = borrowDate.value;
                const rDate = returnDate.value;
                
                if (item === '請選擇物品') {
                    alert('請選擇要借用的物品');
                    return;
                }
                
                if (!name) {
                    alert('請輸入借用人姓名');
                    return;
                }
                
                if (!department) {
                    alert('請輸入部門代號');
                    return;
                }
                
                if (!ext) {
                    alert('請輸入單位分機');
                    return;
                }
                
                if (!bDate) {
                    alert('請選擇借用日期');
                    return;
                }
                
                if (!rDate) {
                    alert('請選擇預計歸還日期');
                    return;
                }
                
                if (new Date(rDate) < new Date(bDate)) {
                    alert('歸還日期不能早於借用日期');
                    return;
                }
                
                // 隱藏"沒有記錄"的提示
                noRecords.style.display = 'none';
                
                // 創建新記錄
                const recordId = currentRecordId++;
                const newRecord = {
                    id: recordId,
                    item: item,
                    name: name,
                    department: department,
                    extension: ext,
                    borrowDate: bDate,
                    returnDate: rDate,
                    actualReturnDate: null,
                    purpose: purpose.value.trim(),
                    status: '借用中'
                };
                
                borrowingRecords.push(newRecord);
                updateBorrowRecords();
                
                // 重置表單
                selectedItem.textContent = '請選擇物品';
                borrowerName.value = '';
                departmentCode.value = '';
                extension.value = '';
                borrowDate.value = today;
                returnDate.value = '';
                purpose.value = '';
                
                
    const dbRef = window.firebaseRef(window.firebaseDB, 'borrows');
    window.firebasePush(dbRef, {
      item: selectedItem.textContent,
      name: borrowerName.value.trim(),
      department: departmentCode.value.trim(),
      extension: extension.value.trim(),
      borrowDate: borrowDate.value,
      returnDate: returnDate.value,
      purpose: purpose.value.trim(),
      timestamp: Date.now()
    });

        alert('借用申請已提交！');
                
                // 切換到借用紀錄頁籤
                tabRecords.click();
            });
            
            // 更新借用紀錄顯示
            function updateBorrowRecords() {
                borrowRecords.innerHTML = '';
                
                if (borrowingRecords.length === 0) {
                    noRecords.style.display = 'block';
                    return;
                }
                
                noRecords.style.display = 'none';
                
                borrowingRecords.forEach(record => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="py-3 px-2 border-b">${record.item}</td>
                        <td class="py-3 px-2 border-b">${record.name}</td>
                        <td class="py-3 px-2 border-b">${record.department}</td>
                        <td class="py-3 px-2 border-b">${record.extension}</td>
                        <td class="py-3 px-2 border-b">${formatDate(record.borrowDate)}</td>
                        <td class="py-3 px-2 border-b">${formatDate(record.returnDate)}</td>
                        <td class="py-3 px-2 border-b">
                            <span class="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs font-medium">借用中</span>
                        </td>
                        <td class="py-3 px-2 border-b">
                            <button class="return-btn px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600" data-id="${record.id}">
                                歸還
                            </button>
                        </td>
                    `;
                    borrowRecords.appendChild(row);
                });
                
                // 添加歸還按鈕事件
                document.querySelectorAll('.return-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = parseInt(this.getAttribute('data-id'));
                        currentReturnId = id;
                        returnModal.style.display = 'block';
                    });
                });
            }
            
            // 取消歸還
            cancelReturn.addEventListener('click', function() {
                returnModal.style.display = 'none';
                currentReturnId = null;
            });
            
            // 確認歸還
            confirmReturn.addEventListener('click', function() {
                if (currentReturnId !== null) {
                    const index = borrowingRecords.findIndex(record => record.id === currentReturnId);
                    if (index !== -1) {
                        const record = borrowingRecords[index];
                        record.actualReturnDate = new Date().toISOString().split('T')[0];
                        
                        // 將記錄移至歷史紀錄
                        historyData.push({...record});
                        
                        // 從當前借用中移除
                        borrowingRecords.splice(index, 1);
                        
                        // 更新顯示
                        updateBorrowRecords();
                        updateHistoryDisplay();
                        
                        // 更新部門篩選選項
                        updateDepartmentFilter();
                    }
                }
                returnModal.style.display = 'none';
                currentReturnId = null;
            });
            
            // 更新歷史紀錄顯示
            function updateHistoryDisplay() {
                // 應用篩選
                applyFilters();
                
                // 清空表格
                historyRecordsBody.innerHTML = '';
                
                if (historyData.length === 0) {
                    noHistory.style.display = 'block';
                    return;
                }
                
                noHistory.style.display = 'none';
                
                // 顯示或隱藏操作列
                historyActionHeader.classList.toggle('hidden', !isAdminMode);
                
                // 填充表格
                historyData.forEach(record => {
                    const row = document.createElement('tr');
                    let actionCell = '';
                    if (isAdminMode) {
                        actionCell = `
                            <td class="py-3 px-2 border-b">
                                <button class="delete-history-btn px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600" data-id="${record.id}">
                                    刪除
                                </button>
                            </td>
                        `;
                    }
                    
                    row.innerHTML = `
                        <td class="py-3 px-2 border-b">${record.item}</td>
                        <td class="py-3 px-2 border-b">${record.name}</td>
                        <td class="py-3 px-2 border-b">${record.department}</td>
                        <td class="py-3 px-2 border-b">${record.extension}</td>
                        <td class="py-3 px-2 border-b">${formatDate(record.borrowDate)}</td>
                        <td class="py-3 px-2 border-b">${formatDate(record.actualReturnDate)}</td>
                        <td class="py-3 px-2 border-b">${record.purpose || '-'}</td>
                        ${actionCell}
                    `;
                    historyRecordsBody.appendChild(row);
                });
                
                // 添加刪除按鈕事件
                if (isAdminMode) {
                    document.querySelectorAll('.delete-history-btn').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const id = parseInt(this.getAttribute('data-id'));
                            currentDeleteType = 'history';
                            currentDeleteId = id;
                            deleteMessage.textContent = '請問是否確認刪除此歷史紀錄？';
                            deleteModal.style.display = 'block';
                        });
                    });
                }
            }
            
            // 應用篩選
            function applyFilters() {
                const searchTerm = searchInput.value.toLowerCase();
                const yearFilter = filterYear.value;
                const departmentFilter = filterDepartment.value;
                
                // 按歸還日期降序排序（最新的在前）
                historyData.sort((a, b) => new Date(b.actualReturnDate) - new Date(a.actualReturnDate));
                
                // 如果有篩選條件，則過濾資料
                if (searchTerm || yearFilter || departmentFilter) {
                    const filteredData = historyData.filter(record => {
                        // 搜尋條件
                        const matchSearch = searchTerm === '' || 
                            record.item.toLowerCase().includes(searchTerm) || 
                            record.name.toLowerCase().includes(searchTerm) || 
                            record.department.toLowerCase().includes(searchTerm) ||
                            (record.purpose && record.purpose.toLowerCase().includes(searchTerm));
                        
                        // 年份條件
                        const recordYear = new Date(record.borrowDate).getFullYear().toString();
                        const matchYear = yearFilter === '' || recordYear === yearFilter;
                        
                        // 部門條件
                        const matchDepartment = departmentFilter === '' || record.department === departmentFilter;
                        
                        return matchSearch && matchYear && matchDepartment;
                    });
                    
                    // 暫時隱藏所有記錄
                    historyData.forEach(record => {
                        record._hidden = true;
                    });
                    
                    // 顯示符合條件的記錄
                    filteredData.forEach(record => {
                        const original = historyData.find(r => r.id === record.id);
                        if (original) {
                            original._hidden = false;
                        }
                    });
                } else {
                    // 如果沒有篩選條件，顯示所有記錄
                    historyData.forEach(record => {
                        record._hidden = false;
                    });
                }
            }
            
            // 更新部門篩選選項
            function updateDepartmentFilter() {
                // 保存當前選中的值
                const currentValue = filterDepartment.value;
                
                // 清空選項
                while (filterDepartment.options.length > 1) {
                    filterDepartment.remove(1);
                }
                
                // 獲取唯一部門列表
                const departments = [...new Set(historyData.map(record => record.department))];
                
                // 添加選項
                departments.forEach(dept => {
                    const option = document.createElement('option');
                    option.value = dept;
                    option.textContent = dept;
                    filterDepartment.appendChild(option);
                });
                
                // 恢復選中值
                if (departments.includes(currentValue)) {
                    filterDepartment.value = currentValue;
                }
            }
            
            // 篩選按鈕事件
            filterBtn.addEventListener('click', function() {
                updateHistoryDisplay();
            });
            
            // 搜尋框輸入事件
            searchInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    updateHistoryDisplay();
                }
            });
            
            // 匯出Excel
            exportBtn.addEventListener('click', function() {
                // 創建CSV內容
                let csvContent = "物品名稱,借用人,部門,分機,借用日期,歸還日期,備註\n";
                
                // 只匯出未隱藏的記錄
                const recordsToExport = historyData.filter(record => !record._hidden);
                
                recordsToExport.forEach(record => {
                    const row = [
                        `"${record.item}"`,
                        `"${record.name}"`,
                        `"${record.department}"`,
                        `"${record.extension}"`,
                        `"${formatDate(record.borrowDate)}"`,
                        `"${formatDate(record.actualReturnDate)}"`,
                        `"${record.purpose || ''}"`
                    ];
                    csvContent += row.join(',') + '\n';
                });
                
                // 創建下載連結
                const blob = new Blob(["\uFEFF" + csvContent], { type: 'text/csv;charset=utf-8;' });
                const url = URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.setAttribute('href', url);
                link.setAttribute('download', `借用紀錄_${formatDateFileName(new Date())}.csv`);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
            
            // 管理者按鈕事件
            adminBtn.addEventListener('click', function() {
                if (isAdminMode) {
                    // 如果已經是管理者模式，則登出
                    isAdminMode = false;
                    adminBtn.textContent = '管理者';
                    adminBtn.classList.remove('bg-red-600', 'hover:bg-red-700');
                    adminBtn.classList.add('bg-gray-600', 'hover:bg-gray-700');
                    
                    // 隱藏管理者頁籤
                    tabItems.classList.add('hidden');
                    
                    // 如果當前在管理者頁籤，則切換到借用申請頁籤
                    if (!itemsManagement.classList.contains('hidden')) {
                        tabBorrow.click();
                    }
                    
                    // 隱藏新增物品功能
                    addItemContainer.classList.add('hidden');
                    
                    // 更新歷史紀錄顯示
                    updateHistoryDisplay();
                    
                    alert('已登出管理者模式');
                } else {
                    // 顯示管理者登入對話框
                    adminPassword.value = '';
                    adminError.classList.add('hidden');
                    adminLoginModal.style.display = 'block';
                }
            });
            
            // 管理者登入
            confirmAdminLogin.addEventListener('click', function() {
                const password = adminPassword.value.trim();
                if (password === adminPasswordValue) {
                    isAdminMode = true;
                    adminLoginModal.style.display = 'none';
                    
                    // 更新管理者按鈕
                    adminBtn.innerHTML = `
                        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                        </svg>
                        登出管理者
                    `;
                    adminBtn.classList.remove('bg-gray-600', 'hover:bg-gray-700');
                    adminBtn.classList.add('bg-red-600', 'hover:bg-red-700');
                    
                    // 顯示管理者頁籤
                    tabItems.classList.remove('hidden');
                    
                    // 顯示新增物品功能
                    addItemContainer.classList.remove('hidden');
                    
                    // 更新歷史紀錄顯示
                    updateHistoryDisplay();
                    
                    alert('已登入管理者模式');
                } else {
                    adminError.classList.remove('hidden');
                }
            });
            
            // 取消管理者登入
            cancelAdminLogin.addEventListener('click', function() {
                adminLoginModal.style.display = 'none';
            });
            
            // 按Enter鍵登入
            adminPassword.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    confirmAdminLogin.click();
                }
            });
            
            // 變更密碼
            changePasswordBtn.addEventListener('click', function() {
                const current = currentPassword.value.trim();
                const newPass = newPassword.value.trim();
                const confirm = confirmPassword.value.trim();
                
                if (current !== adminPasswordValue) {
                    alert('目前密碼錯誤');
                    return;
                }
                
                if (!newPass) {
                    alert('請輸入新密碼');
                    return;
                }
                
                if (newPass !== confirm) {
                    alert('新密碼與確認密碼不符');
                    return;
                }
                
                adminPasswordValue = newPass;
                currentPassword.value = '';
                newPassword.value = '';
                confirmPassword.value = '';
                
                alert('密碼已成功變更');
            });
            
            // 新增物品到管理列表
            manageAddItemBtn.addEventListener('click', function() {
                const itemName = manageItemInput.value.trim();
                if (itemName) {
                    addItem(itemName);
                    manageItemInput.value = '';
                    updateItemsManagement();
                }
            });
            
            // 按Enter鍵新增物品
            manageItemInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    manageAddItemBtn.click();
                }
            });
            
            // 更新物品管理列表
            function updateItemsManagement() {
                manageItemsList.innerHTML = '';
                
                if (itemsData.length === 0) {
                    noItems.style.display = 'block';
                    return;
                }
                
                noItems.style.display = 'none';
                
                itemsData.forEach(item => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="py-3 px-4 border-b">${item.name}</td>
                        <td class="py-3 px-4 border-b">
                            <button class="delete-item-btn px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600" data-id="${item.id}">
                                刪除
                            </button>
                        </td>
                    `;
                    manageItemsList.appendChild(row);
                });
                
                // 添加刪除按鈕事件
                document.querySelectorAll('.delete-item-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = parseInt(this.getAttribute('data-id'));
                        currentDeleteType = 'item';
                        currentDeleteId = id;
                        deleteMessage.textContent = '請問是否確認刪除此物品？';
                        deleteModal.style.display = 'block';
                    });
                });
                
                // 更新歷史紀錄新增對話框中的物品選項
                updateHistoryItemOptions();
            }
            
            // 確認刪除
            confirmDelete.addEventListener('click', function() {
                if (currentDeleteType === 'item') {
                    // 刪除物品
                    const index = itemsData.findIndex(item => item.id === currentDeleteId);
                    if (index !== -1) {
                        itemsData.splice(index, 1);
                        updateItemsManagement();
                        updateItemList();
                    }
                } else if (currentDeleteType === 'history') {
                    // 刪除歷史紀錄
                    const index = historyData.findIndex(record => record.id === currentDeleteId);
                    if (index !== -1) {
                        historyData.splice(index, 1);
                        updateHistoryDisplay();
                        updateDepartmentFilter();
                    }
                }
                
                deleteModal.style.display = 'none';
                currentDeleteType = null;
                currentDeleteId = null;
            });
            
            // 取消刪除
            cancelDelete.addEventListener('click', function() {
                deleteModal.style.display = 'none';
                currentDeleteType = null;
                currentDeleteId = null;
            });
            
            // 新增物品
            function addItem(name) {
                // 檢查是否已存在相同名稱的物品
                if (itemsData.some(item => item.name === name)) {
                    alert('已存在相同名稱的物品');
                    return;
                }
                
                const newItem = {
                    id: Date.now(),
                    name: name
                };
                
                itemsData.push(newItem);
                updateItemList();
            }
            
            // 更新物品下拉列表
            function updateItemList() {
                itemList.innerHTML = '';
                
                if (itemsData.length === 0) {
                    const emptyItem = document.createElement('li');
                    emptyItem.className = 'px-4 py-2 text-gray-500';
                    emptyItem.textContent = '沒有可用物品';
                    itemList.appendChild(emptyItem);
                    return;
                }
                
                itemsData.forEach(item => {
                    const li = document.createElement('li');
                    li.className = 'px-4 py-2 hover:bg-blue-100 cursor-pointer';
                    li.textContent = item.name;
                    itemList.appendChild(li);
                });
            }
            
            // 更新歷史紀錄新增對話框中的物品選項
            function updateHistoryItemOptions() {
                historyItem.innerHTML = '';
                
                itemsData.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.name;
                    option.textContent = item.name;
                    historyItem.appendChild(option);
                });
            }
            
            // 在歷史紀錄頁面添加新增按鈕
            const addHistoryBtn = document.createElement('button');
            addHistoryBtn.id = 'add-history-btn';
            addHistoryBtn.className = 'bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 focus:outline-none flex items-center ml-2';
            addHistoryBtn.innerHTML = `
                <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                新增紀錄
            `;
            addHistoryBtn.addEventListener('click', function() {
                if (itemsData.length === 0) {
                    alert('請先新增物品');
                    return;
                }
                
                // 重置表單
                historyItem.value = itemsData.length > 0 ? itemsData[0].name : '';
                historyName.value = '';
                historyDepartment.value = '';
                historyExtension.value = '';
                historyBorrowDate.value = today;
                historyReturnDate.value = today;
                historyPurpose.value = '';
                
                addHistoryModal.style.display = 'block';
            });
            
            // 將新增按鈕添加到歷史紀錄頁面
            const historyHeader = document.querySelector('#history-records .flex.justify-between.items-center');
            historyHeader.appendChild(addHistoryBtn);
            
            // 隱藏新增按鈕（非管理者模式）
            addHistoryBtn.classList.add('hidden');
            
            // 取消新增歷史紀錄
            cancelAddHistory.addEventListener('click', function() {
                addHistoryModal.style.display = 'none';
            });
            
            // 確認新增歷史紀錄
            confirmAddHistory.addEventListener('click', function() {
                const item = historyItem.value;
                const name = historyName.value.trim();
                const department = historyDepartment.value.trim();
                const ext = historyExtension.value.trim();
                const bDate = historyBorrowDate.value;
                const rDate = historyReturnDate.value;
                
                if (!item) {
                    alert('請選擇物品');
                    return;
                }
                
                if (!name) {
                    alert('請輸入借用人姓名');
                    return;
                }
                
                if (!department) {
                    alert('請輸入部門代號');
                    return;
                }
                
                if (!ext) {
                    alert('請輸入單位分機');
                    return;
                }
                
                if (!bDate) {
                    alert('請選擇借用日期');
                    return;
                }
                
                if (!rDate) {
                    alert('請選擇歸還日期');
                    return;
                }
                
                if (new Date(rDate) < new Date(bDate)) {
                    alert('歸還日期不能早於借用日期');
                    return;
                }
                
                // 創建新記錄
                const recordId = Date.now();
                const newRecord = {
                    id: recordId,
                    item: item,
                    name: name,
                    department: department,
                    extension: ext,
                    borrowDate: bDate,
                    returnDate: rDate,
                    actualReturnDate: rDate,
                    purpose: historyPurpose.value.trim(),
                    status: '已歸還'
                };
                
                historyData.push(newRecord);
                updateHistoryDisplay();
                updateDepartmentFilter();
                
                addHistoryModal.style.display = 'none';
                alert('歷史紀錄已新增');
            });
            
            // 格式化日期
            function formatDate(dateString) {
                if (!dateString) return '-';
                const date = new Date(dateString);
                return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;
            }
            
            // 格式化檔案名稱用日期
            function formatDateFileName(date) {
                return `${date.getFullYear()}${(date.getMonth() + 1).toString().padStart(2, '0')}${date.getDate().toString().padStart(2, '0')}`;
            }
            
            // 監聽管理者模式變化
            function updateAdminMode() {
                // 顯示或隱藏新增歷史紀錄按鈕
                addHistoryBtn.classList.toggle('hidden', !isAdminMode);
                
                // 更新歷史紀錄顯示
                updateHistoryDisplay();
            }
            
            // 設置監聽器，當isAdminMode變化時更新界面
            Object.defineProperty(window, 'isAdminMode', {
                set: function(value) {
                    this._isAdminMode = value;
                    updateAdminMode();
                },
                get: function() {
                    return this._isAdminMode;
                }
            });
            
            // 初始化
            updateItemList();
            updateBorrowRecords();
            updateHistoryDisplay();
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'938d76fa07e5f228',t:'MTc0NjA4MzQ4Ni4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script>
<!-- Firebase SDK -->
<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";
  import { getDatabase, ref, push } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-database.js";

  const firebaseConfig = {
    apiKey: "AIzaSyA1KR9Wf4eTYSHLenPPtXuSArgFBECqybM",
    authDomain: "jraska-ee328.firebaseapp.com",
    databaseURL: "https://jraska-ee328-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "jraska-ee328",
    storageBucket: "jraska-ee328.firebasestorage.app",
    messagingSenderId: "88222620386",
    appId: "1:88222620386:web:a75bcb179aa257170c5cbb",
    measurementId: "G-H0669LV9W0"
  };

  const app = initializeApp(firebaseConfig);
  const database = getDatabase(app);
  window.firebaseDB = database;
  window.firebaseRef = ref;
  window.firebasePush = push;
</script>

</body>
</html>
